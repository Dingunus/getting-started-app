name: build-docker
on: [push]
jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
     - run: ls
     - name: Check out repository code
       uses: actions/checkout@v4
     - run: ls
     - run: docker build -t getting-started .
     - run: docker images
     - name: Login to Docker Hub
       uses: docker/login-action@v3
       with:
         username: ${{ vars.DOCKERHUB_USERNAME }}
         password: ${{ secrets.DOCKERHUB_TOKEN }}
     - name: Bump version and push tag
       id: tag_version
       uses: mathieudutour/github-tag-action@v6.2
       with:
         github_token: ${{ secrets.GITHUB_TOKEN }}
     - name: Get next version
       uses: reecetech/version-increment@2024.10.1
       id: version
       with:
         scheme: semver
         increment: patch
     - run: docker tag getting-started dingunus/getting-started:${{ steps.version.outputs.version }}
     - run: docker push dingunus/getting-started:${{ steps.version.outputs.version }}
  deploy:
    needs: build-docker-image
    runs-on: ubuntu-latest
    steps:
     - name: Configure AWS credentials
       uses: aws-actions/configure-aws-credentials@v1
       with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: eu-west-3

     - name: Create EC2 Instance 
       run: |
         # Création du script user-data
         cat > userdata.sh << 'EOF'
         #!/bin/bash
         # Redirection des logs pour le débogage
         exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
         echo "🔄 Mise à jour du système..."
         yum update -y
         
         echo "🛠 Installation de Docker..."
         amazon-linux-extras install docker -y
         systemctl start docker
         systemctl enable docker
         usermod -aG docker ec2-user
         
         echo "⏳ Attente que Docker soit prêt..."
         sleep 20
         echo "📦 Récupération et lancement du conteneur Docker..."
         docker pull ${DOCKERHUB_USERNAME}/getting-started:0.0.2
         docker run -d -p 3000:3000 ${DOCKERHUB_USERNAME}/getting-started:0.0.2 --restart always
          
         echo "✅ Vérification des conteneurs actifs"
         docker ps

         echo "🚀 Docker setup terminé"
         EOF

         sed -i "s|\${DOCKERHUB_USERNAME}|${{ secrets.DOCKERHUB_USERNAME }}|g" userdata.sh
         
         echo "🔧 Lancement de l'instance EC2..."
         INSTANCE_ID=$(aws ec2 run-instances \
            --image-id ami-0fcc1d7ed380d3549 \
            --count 1 \
            --instance-type t2.micro \
            --key-name g4 \
            --security-group-ids launch-wizard-1 \
            --region eu-west-3 \
            --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=g4-Cli-Instance-docker}]' \
            --user-data file://userdata.sh \
            --query 'Instances[0].InstanceId' \
            --output text)
         echo "Instance créée avec l'ID: $INSTANCE_ID"
          
         # Attente que l'instance soit prête
         echo "Attente du démarrage de l'instance..."
         aws ec2 wait instance-status-ok --instance-ids $INSTANCE_ID
          

         echo "🎉 Déploiement terminé :)"
